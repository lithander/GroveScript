set t, abs(cos(time()*60))
set tt, 3+3*floor(0.5+((time()*120)/360)%5)
out tt
set maxi, 12
set mg, maxi-1
set ibase, (maxi*t)%maxi-0.01
set iterations, floor(ibase)
out iterations
set growth, frac(ibase)
out growth
//run letscount

seed Tree, Trunk X
if iterations > 0
	grw Tree, LeafRules
repeat iterations-2
	grw Tree, TrunkRules
if iterations > 2
	grw Tree, LeafRules
	grw Tree, LeafRules
	
set r, -3
repeat tt
	raise r
	pos -75+150*t, 0
	set i, 0
	set d, ibase*(1.5-t)
	dir r*sin(time()*50)*720/tt+time()*36
	run Tree

#color
rgb 0.6-(i/iterations), 0.1+0.7*i/iterations, 0

#BranchA
raise i
if i=iterations
	hsv t,1,1
	if i=mg
		sze d*(1+growth*5)
	mov d*growth
else
	run color
	sze d
	mov d
set d, d*(0.985^maxi+0.02*sin(t*150))
psh default
rot -45

#BranchB
pop default
rot 45+sin(t*100)*3

#TrunkRules, Foo, Bar
X => BranchA F BranchB F X

#LeafRules
X => BranchA F X BranchB F X

#letscount
set i, 0
repeat 2
	while i < 12
		raise i
		if i%3=0
			out i, 'vielfaches von 3
		else if i%2=1
			out i, 'ungerade
		else
			out i
	until i <= 0
		lower i, 2
		out i
